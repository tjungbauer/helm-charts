# -- ArgoCD Application
# <br />
# Example include:
# {{- if .Values.argocd_applications }}
# {{ include "tpl.argocdApplication" .Values.argocd_applications | indent 2 }}
# {{- end }}
argocd_applications:
  example-app:

    # -- Enable this application
    # @default: false
    enabled: false

    # -- Basic application metadata
    # @default: "openshift-gitops"
    namespace: "openshift-gitops"
    
    # -- Add labels to your application object.
    # @default: {}
    labels: {}
    #  app.kubernetes.io/name: example-app
    #  app.kubernetes.io/part-of: my-project

    # -- Add annotations to your application object.
    # @default: {}      
    annotations: {}
    #  argocd.argoproj.io/sync-wave: "1"
    #  notifications.argoproj.io/subscribe.on-sync-succeeded.slack: my-channel

    # -- Add this finalizer ONLY if you want these to cascade delete.
    # @default: []
    finalizers:
      # -- The default behaviour is foreground cascading deletion
      # - resources-finalizer.argocd.argoproj.io
      # --Alternatively, you can use background cascading deletion
      # - resources-finalizer.argocd.argoproj.io/background
    
    #  -- Argo CD Project the application belongs to
    # @default: "default"
    project: default

    # -- Extra information to show in the Argo CD Application details tab
    # @default: []
    info: []
     # - name: "Example"
     #   value: "https://example.com"
     # - name: "Documentation"
     #   value: "https://docs.example.com"

    # Single source configuration (use either source OR sources, not both)
    source:

      # -- Can point to either a Helm chart repo or a git repo.
      repositoryURL: "https://github.com/argoproj/argocd-example-apps.git"

      # -- revision, For Helm, this refers to the chart version.
      targetRevision: "HEAD"

      # -- This has no meaning for Helm charts pulled directly from a Helm repo instead of git.
      path: "guestbook"

      # -- Set this when pulling directly from a Helm repo. DO NOT set for git-hosted Helm charts.
      # @default: ""
      chart: ""

      # -- Helm source configuration
      # @default: {}
      helm:
        # -- Release name override (defaults to application name)
        # @default: ""
        releaseName: "my-release"
  
        # -- Value files to use for the Helm release
        # @default: []
        valueFiles:
          - values.yaml
          - values-customyaml

        # Ignore locally missing valueFiles when installing Helm chart. Defaults to false
        # @default: false
        ignoreMissingValueFiles: false

        # -- Extra parameters to set (same as setting through values.yaml, but these take precedence)
        # @default: []
        parameters:
          - name: "nginx-ingress.enabled"
            value: "true"
            forceString: true
          - name: "replicas"
            value: "3"

        # -- Use the contents of files as parameters (uses Helm's --set-file)
        # @default: []
        fileParameters:
          - name: "config"
            path: "files/config.json"

        # Values file as block file. Prefer to use valuesObject if possible (see below)
        # @default: ""
        values: |
          ingress:
            enabled: true
            path: /
            hosts:
              - mydomain.example.com
            annotations:
              kubernetes.io/ingress.class: nginx
              kubernetes.io/tls-acme: "true"
            labels: {}
            tls:
              - secretName: mydomain-tls
                hosts:
                  - mydomain.example.com

        # Values file as block file. This takes precedence over values
        # @default: {}
        valuesObject:
          ingress:
            enabled: true
            path: /
            hosts:
              - mydomain.example.com
            annotations:
              kubernetes.io/ingress.class: nginx
              kubernetes.io/tls-acme: "true"
            labels: {}
            tls:
              - secretName: mydomain-tls
                hosts:
                  - mydomain.example.com

        # -- Pass credentials to the Helm release (helm's --pass-credentials)
        # @default: false
        passCredentials: false

        # -- Skip CRD installation (helm's --skip-crds)
        # @default: false
        skipCrds: false

        # -- Skip schema validation (helm's --skip-schema-validation)
        # @default: false
        skipSchemaValidation: false

        # -- Helm version to use (helm's --version). Can be either v2 or v3
        # @default: ""
        version: "v3"

        # -- You can specify the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD uses
        # the Kubernetes version of the target cluster. The value must be semver formatted. Do not prefix with `v`.
        # @default: ""
        kubeVersion: "1.30.0"

        # -- You can specify the Kubernetes resource API versions to pass to Helm when templating manifests. By default, Argo
        # CD uses the API versions of the target cluster. The format is [group/]version/kind.
        # @default: []
        apiVersions:
          - "traefik.io/v1alpha1/TLSOption"
          - "v1/Service"

        # -- Optional namespace to template with. If left empty, defaults to the app's destination namespace.
        # @default: ""
        namespace: "custom-namespace"

    # -- Destination configuration
    destination:
      # -- Use either server OR name, not both
      # cluster API URL
      # @default: "https://kubernetes.default.svc"
      server: "https://kubernetes.default.svc"

      # -- name of the cluster to sync to
      # @default: "" 
      # name: "in-cluster"

      # -- The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
      # @default: ""
      namespace: "guestbook"


    # -- Sync policy configuration
    syncPolicy:
      # -- automated sync by default retries failed attempts 5 times with following delays between attempts ( 5s, 10s, 20s, 40s, 80s ); retry controlled using `retry` field.
      # @default: {}
      automated:

        # -- # Specifies if resources should be pruned during auto-syncing ( false by default ).
        # @default: false
        prune: false

        # -- Specifies if partial app sync should be executed when resources are changed only in 
        # target Kubernetes cluster and no git change detected ( false by default ).
        # @default: false
        selfHeal: false

        # -- Allows deleting all application resources during automatic syncing ( false by default ).
        # @default: false
        allowEmpty: false

      # -- Sync options which modifies sync behavior <br />
      # The following can be set (see: https://argo-cd.readthedocs.io/en/stable/operator-manual/sync-options/)<br />
      # <ul>
      # <li>- Validate=true ... disables resource validation (equivalent to 'kubectl apply --validate=false') ( true by default ).</li>
      # <li>- CreateNamespace=true ... Namespace Auto-Creation ensures that namespace specified as the application destination exists in the destination cluster.</li>
      # <li>- PrunePropagationPolicy=foreground ... Supported policies are background, foreground and orphan.</li>
      # <li>- PruneLast=true ... Allow the ability for resource pruning to happen as a final, implicit wave of a sync operation</li>
      # <li>- RespectIgnoreDifferences=true ... When syncing changes, respect fields ignored by the ignoreDifferences configuration</li>
      # <li>- ApplyOutOfSyncOnly=true ... Only sync out-of-sync resources, rather than applying every object in the application </li>
      # </ul>
      # @default: []
      syncOptions: []
      #  - "Validate=true"
      #  - "CreateNamespace=true"
      #  - "PrunePropagationPolicy=foreground"
      #  - "PruneLast=true"
      #  - "RespectIgnoreDifferences=true"
      #  - "ApplyOutOfSyncOnly=true"

      # -- Sets the metadata for the application namespace. Only valid if CreateNamespace=true (see above), otherwise it is ignored.
      # @default: {}
      managedNamespaceMetadata: {}
      #  labels:
      #    managed-by: "argocd"
      #    environment: "production"
      #  annotations:
      #    description: "Managed by ArgoCD"

      # -- Retry configuration for failed syncs.
      # @default: {}
      retry:

        # -- Number of failed sync attempt retries; unlimited number of attempts if less than 0
        # @default: 0
        limit: 5

        # -- Backoff configuration for failed sync attempts
        # @default: {}
        backoff:

          # -- the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")# duration between retries
          duration: "5s"

          # -- a factor to multiply the base duration after each failed retry
          factor: 2

          # -- the maximum amount of time allowed for the backoff strategy
          maxDuration: "3m"


    # -- Will ignore differences between live and desired states during the diff. Note that these configurations are not
    # used during the sync process unless the `RespectIgnoreDifferences=true` sync option is enabled.
    # default: {}
    ignoreDifferences: {}
     # - group: "apps"
     #   kind: "Deployment"
     #   jsonPointers:
     #     - "/spec/replicas"
     # - kind: "ConfigMap"
     #   jqPathExpressions:
     #     - '.data["config.yaml"].auth'
     # - group: "*"
     #   kind: "*"
     #   managedFieldsManagers:
     #     - "kube-controller-manager"
     #   name: "my-deployment"
     #   namespace: "my-namespace"