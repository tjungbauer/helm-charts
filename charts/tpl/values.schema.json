{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "title": "TPL Library Chart Values Schema",
  "description": "Schema for validating values used with the TPL library chart templates",
  "definitions": {
    "kubernetesName": {
      "type": "string",
      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$",
      "maxLength": 63,
      "description": "A valid Kubernetes resource name"
    },
    "kubernetesNamespace": {
      "type": "string",
      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$",
      "maxLength": 63,
      "description": "A valid Kubernetes namespace name"
    },
    "availabilityValue": {
      "oneOf": [
        { 
          "type": "integer", 
          "minimum": 0,
          "description": "Absolute number of pods"
        },
        { 
          "type": "string", 
          "pattern": "^[0-9]+%$",
          "description": "Percentage of pods (e.g., '25%')"
        }
      ]
    }
  },
  "properties": {
    "tolerations": {
      "type": "array",
      "description": "Node tolerations for pods",
      "items": {
        "type": "object",
        "properties": {
          "key": { "type": "string" },
          "operator": { 
            "type": "string", 
            "enum": ["Exists", "Equal"] 
          },
          "value": { "type": "string" },
          "effect": { 
            "type": "string", 
            "enum": ["NoSchedule", "PreferNoSchedule", "NoExecute"] 
          },
          "tolerationSeconds": { "type": "integer", "minimum": 0 }
        },
        "required": ["key", "operator", "effect"]
      }
    },
    "resources": {
      "type": "object",
      "description": "Resource requests and limits",
      "properties": {
        "requests": {
          "type": "object",
          "properties": {
            "cpu": { "type": ["string", "number"] },
            "memory": { "type": ["string", "number"] },
            "ephemeral-storage": { "type": ["string", "number"] }
          }
        },
        "limits": {
          "type": "object",
          "properties": {
            "cpu": { "type": ["string", "number"] },
            "memory": { "type": ["string", "number"] },
            "ephemeral-storage": { "type": ["string", "number"] },
            "nvidia": { "type": "integer", "minimum": 0 }
          }
        }
      }
    },
    "nodeSelector": {
      "type": "object",
      "description": "Node selector configuration",
      "properties": {
        "key": { "type": "string" },
        "value": { "type": "string" }
      },
      "required": ["key"]
    },
    "serviceAccount": {
      "type": "object",
      "properties": {
        "create": { "type": "boolean", "default": false },
        "name": { "type": "string" },
        "annotations": { "type": "object" }
      }
    },
    "securityContext": {
      "type": "object",
      "description": "Container-level security context configuration",
      "properties": {
        "runAsUser": { 
          "type": "integer", 
          "minimum": 0,
          "description": "The UID to run the entrypoint of the container process"
        },
        "runAsGroup": { 
          "type": "integer", 
          "minimum": 0,
          "description": "The GID to run the entrypoint of the container process"
        },
        "fsGroup": { 
          "type": "integer", 
          "minimum": 0,
          "description": "A special supplemental group that applies to all containers in a pod"
        },
        "runAsNonRoot": { 
          "type": "boolean", 
          "default": true,
          "description": "Indicates that the container must run as a non-root user"
        },
        "readOnlyRootFilesystem": { 
          "type": "boolean", 
          "default": true,
          "description": "Whether this container has a read-only root filesystem"
        },
        "allowPrivilegeEscalation": {
          "type": "boolean",
          "default": false,
          "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process"
        },
        "capabilities": {
          "type": "object",
          "description": "The capabilities to add/drop when running containers",
          "properties": {
            "add": {
              "type": "array",
              "items": { "type": "string" },
              "description": "Added capabilities"
            },
            "drop": {
              "type": "array",
              "items": { "type": "string" },
              "description": "Removed capabilities"
            }
          }
        }
      }
    },
    "podSecurityContext": {
      "type": "object",
      "description": "Pod-level security context configuration",
      "properties": {
        "runAsUser": { 
          "type": "integer", 
          "minimum": 0,
          "description": "The UID to run the entrypoint of the container process"
        },
        "runAsGroup": { 
          "type": "integer", 
          "minimum": 0,
          "description": "The GID to run the entrypoint of the container process"
        },
        "fsGroup": { 
          "type": "integer", 
          "minimum": 0,
          "description": "A special supplemental group that applies to all containers in a pod"
        },
        "runAsNonRoot": { 
          "type": "boolean", 
          "default": true,
          "description": "Indicates that containers must run as a non-root user"
        },
        "seccompProfile": {
          "type": "object",
          "description": "The seccomp options to use by the containers in this pod",
          "properties": {
            "type": {
              "type": "string",
              "enum": ["Unconfined", "RuntimeDefault", "Localhost"],
              "description": "Indicates which kind of seccomp profile will be applied"
            },
            "localhostProfile": {
              "type": "string",
              "description": "Indicates a profile defined in a file on the node should be used"
            }
          },
          "required": ["type"]
        },
        "seLinuxOptions": {
          "type": "object",
          "description": "The SELinux context to be applied",
          "properties": {
            "level": { "type": "string", "description": "Level is SELinux level label that applies to the container" },
            "role": { "type": "string", "description": "Role is a SELinux role label that applies to the container" },
            "type": { "type": "string", "description": "Type is a SELinux type label that applies to the container" },
            "user": { "type": "string", "description": "User is a SELinux user label that applies to the container" }
          }
        },
        "supplementalGroups": {
          "type": "array",
          "items": { "type": "integer", "minimum": 0 },
          "description": "A list of groups applied to the first process run in each container, in addition to the container's primary GID"
        },
        "sysctls": {
          "type": "array",
          "description": "A list of namespaced sysctls used for the pod",
          "items": {
            "type": "object",
            "properties": {
              "name": { "type": "string", "description": "Name of a property to set" },
              "value": { "type": "string", "description": "Value of a property to set" }
            },
            "required": ["name", "value"]
          }
        }
      }
    },
    "podDisruptionBudget": {
      "type": "object",
      "title": "Pod Disruption Budget Configuration",
      "description": "Configures a PodDisruptionBudget to limit voluntary disruptions. You must specify either 'minAvailable' OR 'maxUnavailable', but not both.",
      "properties": {
        "name": {
          "$ref": "#/definitions/kubernetesName",
          "description": "Name of the PodDisruptionBudget resource"
        },
        "namespace": {
          "$ref": "#/definitions/kubernetesNamespace",
          "description": "Namespace for the PodDisruptionBudget resource (defaults to 'default' if not specified)"
        },
        "additionalAnnotations": {
          "type": "object",
          "description": "Additional annotations to add to the PodDisruptionBudget resource",
          "patternProperties": {
            "^[a-zA-Z0-9._/-]+$": {
              "type": "string"
            }
          }
        },
        "additionalLabels": {
          "type": "object",
          "description": "Additional labels to add to the PodDisruptionBudget resource",
          "patternProperties": {
            "^[a-zA-Z0-9._/-]+$": {
              "type": "string"
            }
          }
        },
        "minAvailable": {
          "$ref": "#/definitions/availabilityValue",
          "description": "Minimum number of pods that must be available during disruption. Cannot be used together with maxUnavailable."
        },
        "maxUnavailable": {
          "$ref": "#/definitions/availabilityValue",
          "description": "Maximum number of pods that can be unavailable during disruption. Cannot be used together with minAvailable."
        },
        "matchLabels": {
          "type": "object",
          "description": "Map of {key,value} pairs for pod selection",
          "patternProperties": {
            "^[a-zA-Z0-9._/-]+$": {
              "type": "string"
            }
          }
        },
        "matchExpressions": {
          "type": "array",
          "description": "List of label selector requirements for pod selection",
          "items": {
            "type": "object",
            "properties": {
              "key": { 
                "type": "string",
                "description": "Label key that the selector applies to"
              },
              "operator": { 
                "type": "string", 
                "enum": ["In", "NotIn", "Exists", "DoesNotExist"],
                "description": "Represents a key's relationship to a set of values"
              },
              "values": {
                "type": "array",
                "items": { "type": "string" },
                "description": "Array of string values (required for In and NotIn operators)"
              }
            },
            "required": ["key", "operator"],
            "if": {
              "properties": {
                "operator": { "enum": ["In", "NotIn"] }
              }
            },
            "then": {
              "required": ["values"],
              "properties": {
                "values": {
                  "minItems": 1,
                  "description": "Values array is required and must not be empty when using 'In' or 'NotIn' operators"
                }
              }
            }
          }
        },
        "unhealthyPodEvictionPolicy": {
          "type": "string",
          "enum": ["IfHealthyBudget", "AlwaysAllow"],
          "default": "AlwaysAllow",
          "description": "Policy for evicting unhealthy pods. IfHealthyBudget means that running pods that are not healthy will be evicted only if the guarded application has met the PDB. AlwaysAllow means that all running pods will be evicted."
        }
      },
      "required": ["name"],
      "allOf": [
        {
          "not": {
            "allOf": [
              { "required": ["minAvailable"] },
              { "required": ["maxUnavailable"] }
            ]
          }
        },
        {
          "anyOf": [
            { "required": ["minAvailable"] },
            { "required": ["maxUnavailable"] }
          ]
        }
      ],
      "additionalProperties": false
    },
    "namespace": {
      "type": "object",
      "properties": {
        "bindtoNode": {
          "type": "object",
          "properties": {
            "role": { "type": "string" },
            "operator": { "type": "string", "default": "Equal" },
            "effect": { "type": "string", "default": "NoSchedule" },
            "value": { "type": "string", "default": "reserved" }
          },
          "required": ["role"]
        },
        "additionalAnnotations": { "type": "object" },
        "additionalLabels": { "type": "object" }
      }
    },
    "matchExpressions": {
      "type": "array",
      "description": "Match expressions for label selectors",
      "items": {
        "type": "object",
        "properties": {
          "key": { 
            "type": "string",
            "description": "Label key that the selector applies to"
          },
          "operator": { 
            "type": "string", 
            "enum": ["In", "NotIn", "Exists", "DoesNotExist"],
            "description": "Represents a key's relationship to a set of values"
          },
          "values": {
            "type": "array",
            "items": { "type": "string" },
            "description": "Array of string values"
          }
        },
        "required": ["key", "operator"]
      }
    },
    "namespaceSelector": {
      "type": "object",
      "description": "Namespace selector configuration",
      "properties": {
        "matchLabels": {
          "type": "object",
          "description": "Map of {key,value} pairs"
        },
        "matchExpressions": {
          "$ref": "#/properties/matchExpressions"
        }
      }
    }
  }
}
