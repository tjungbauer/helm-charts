name: Release Charts

on:
  # Only trigger when lint-test completes successfully on main branch
  workflow_run:
    workflows: ["Lint and Test Charts"]
    types:
      - completed
    branches:
      - main
  # Manual trigger for emergency releases
  workflow_dispatch:

jobs:
  release:
    # Only run if the previous workflow succeeded
    if: github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch'
    concurrency: 
      group: release-${{ github.ref }}
      cancel-in-progress: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0
          # Use the SHA from the workflow_run if available, otherwise use the current SHA
          ref: ${{ github.event.workflow_run.head_sha || github.sha }}

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@1a275c3b69536ee54be43f2070a358922e12c8d4 # v4
        with:
          version: latest 

      # Add caching for Helm repositories
      - name: Cache Helm repositories
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4
        with:
          path: ~/.cache/helm/repository
          key: ${{ runner.os }}-helm-${{ hashFiles('**/Chart.lock') }}
          restore-keys: |
            ${{ runner.os }}-helm-

      - name: Add dependency chart repos
        run: |
          helm repo add stable https://charts.helm.sh/stable
          helm repo add incubator https://charts.helm.sh/incubator
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo update

      # Optional step if GPG signing is used
      - name: Prepare GPG key
        if: env.GPG_KEYRING_BASE64 != ''
        run: |
          gpg_dir=.cr-gpg
          mkdir "$gpg_dir"
          keyring="$gpg_dir/secring.gpg"
          base64 -d <<< "$GPG_KEYRING_BASE64" > "$keyring"
          passphrase_file="$gpg_dir/passphrase"
          echo "$GPG_PASSPHRASE" > "$passphrase_file"
          echo "CR_PASSPHRASE_FILE=$passphrase_file" >> "$GITHUB_ENV"
          echo "CR_KEYRING=$keyring" >> "$GITHUB_ENV"
        env:
          GPG_KEYRING_BASE64: "${{ secrets.GPG_KEYRING_BASE64 }}"
          GPG_PASSPHRASE: "${{ secrets.GPG_PASSPHRASE }}"

      - name: Check for chart changes (excluding docs)
        id: check-changes
        run: |
          echo "Checking for chart changes that warrant a release..."
          
          # Look through recent commits to find any substantial chart changes
          # We'll collect all substantial changes from recent commits
          substantial_chart_changes=""
          
          echo "Analyzing recent commits for chart changes..."
          for i in {1..10}; do
            commit_sha=$(git rev-parse HEAD~$i 2>/dev/null || echo "")
            if [[ -z "$commit_sha" ]]; then
              break
            fi
            
            commit_files=$(git diff --name-only HEAD~$i HEAD~$((i+1)) 2>/dev/null | grep "^charts/" || true)
            if [[ -n "$commit_files" ]]; then
              # Check if this commit has substantial chart changes (not just docs)
              substantial_changes=$(echo "$commit_files" | grep -v -E '\.(md|MD)$|\.gitignore$|/\.helm-docs\.yml$|/test/.*\.yaml$' || true)
              if [[ -n "$substantial_changes" ]]; then
                echo "üì¶ HEAD~$i: Found substantial changes: $substantial_changes"
                substantial_chart_changes="$substantial_chart_changes $substantial_changes"
              else
                echo "üìö HEAD~$i: Only documentation changes: $commit_files"
              fi
            fi
          done
          
          if [[ -z "$substantial_chart_changes" ]]; then
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "‚ÑπÔ∏è No substantial chart changes found in recent commits"
            exit 0
          fi
          
          echo ""
          echo "üìã All substantial chart changes found:"
          echo "$substantial_chart_changes"
          
          # Check each chart directory for significant changes
          charts_with_changes=""
          
          for chart_dir in $(echo "$substantial_chart_changes" | tr ' ' '\n' | cut -d'/' -f1-2 | sort -u); do
            if [[ -d "$chart_dir" && "$chart_dir" =~ ^charts/ ]]; then
              charts_with_changes="$charts_with_changes $chart_dir"
              echo "‚úÖ $(basename $chart_dir): Has substantial changes requiring release"
            fi
          done
          
          if [[ -n "$charts_with_changes" ]]; then
            echo "changes=true" >> $GITHUB_OUTPUT
            echo ""
            echo "üöÄ Charts requiring release:$charts_with_changes"
          else
            echo "changes=false" >> $GITHUB_OUTPUT
            echo ""
            echo "üìö All changes are documentation-only - skipping release"
          fi

      - name: Run chart-releaser
        if: steps.check-changes.outputs.changes == 'true'
        uses: helm/chart-releaser-action@cae68fefc6b5f367a0275617c9f83181ba54714f # v1.7.0
        with:
          config: cr.yaml
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Log release status
        run: |
          if [ "${{ steps.check-changes.outputs.changes }}" = "true" ]; then
            echo "‚úÖ Chart release process completed"
          else
            echo "‚ÑπÔ∏è No chart changes found, release skipped"
          fi