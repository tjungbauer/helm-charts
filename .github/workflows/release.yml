name: Release Charts

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/**'
      - 'README.md'
  workflow_run:
    workflows: ["Lint and Test Charts"]
    types:
      - completed
jobs:
  release:
    concurrency: staging_environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@b9e51907a09c216f16ebe8536097933489208112 # v4
        with:
          version: latest 

      # Add caching for Helm repositories
      - name: Cache Helm repositories
        uses: actions/cache@2cdf405574d6ef1f33a1d12acccd3ae82f47b3f2 # v4
        with:
          path: ~/.cache/helm/repository
          key: ${{ runner.os }}-helm-${{ hashFiles('**/Chart.lock') }}
          restore-keys: |
            ${{ runner.os }}-helm-

      - name: Add dependency chart repos
        run: |
          helm repo add stable https://charts.helm.sh/stable
          helm repo add incubator https://charts.helm.sh/incubator
          helm repo update

      # Optional step if GPG signing is used
      - name: Prepare GPG key
        run: |
          gpg_dir=.cr-gpg
          mkdir "$gpg_dir"
          keyring="$gpg_dir/secring.gpg"
          base64 -d <<< "$GPG_KEYRING_BASE64" > "$keyring"
          passphrase_file="$gpg_dir/passphrase"
          echo "$GPG_PASSPHRASE" > "$passphrase_file"
          echo "CR_PASSPHRASE_FILE=$passphrase_file" >> "$GITHUB_ENV"
          echo "CR_KEYRING=$keyring" >> "$GITHUB_ENV"
        env:
          GPG_KEYRING_BASE64: "${{ secrets.GPG_KEYRING_BASE64 }}"
          GPG_PASSPHRASE: "${{ secrets.GPG_PASSPHRASE }}"

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@cae68fefc6b5f367a0275617c9f83181ba54714f # v1.7.0
        with:
          config: cr.yaml
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"